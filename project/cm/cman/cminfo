#!/usr/bin/env python3

import os
import logging

logging.basicConfig(format="%(levelname)s:%(message)s", level=logging.WARNING)
_logger = logging.getLogger(__name__)

from src.mw.socket import RequestSocket, ReplySocket
from src.action import Action
from src.response import Response
from src.message import Message
from src.node import get_node
from src.commons import send_message_to_head
from src.configuration import load_configuration

from time import sleep

if __name__ == "__main__":
    config = load_configuration()
    node = get_node()

    if node.is_head():
        msg = Message(
            node_id=node.node_id,
            action=Action.FetchNodes,
            response=None,
            content=None)

        message, success = send_message_to_head(msg)

        if success and message is not None and message.response == Response.FetchSuccessful:
            _logger.debug(f"Registered with head node successfully. Proceeding.")
            for n in message.content:
                print(n)
        elif success:
            print(f"Failed! {message}")
        else:
            print(f"Could not successfully contact head node!")

    elif node.is_compute():
        raise NotImplementedError(f"cminfo should only be called from head node.")

    else:
        raise NotImplementedError(f"Server type not recognized. This should not have happened!")
