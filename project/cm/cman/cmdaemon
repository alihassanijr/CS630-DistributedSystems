#!/usr/bin/env python3

import os

from src.mw.socket import RequestSocket, ReplySocket
from src.node import Node

import logging
from time import sleep

logging.basicConfig(format="%(levelname)s:%(message)s", level=logging.INFO)
_logger = logging.getLogger(__name__)

if __name__ == "__main__":
    node = Node()

    if node.is_head():
        from src.master.handler import handle_message
        # This is a head node
        _logger.info("Starting head node service.")
        svc = ReplySocket(hostname=node.master_addr, port=node.master_port)
        svc.open()

        while True:
            _logger.info("Waiting for message")
            message = svc.receive()
            _logger.info(f"Head received message.")
            response = handle_message(node, message)
            _logger.info(f"Head handled message.")
            svc.send(response)
            _logger.info("Sent response.")

    elif node.is_compute():
        sleep(5)
        # This is a compute node
        _logger.info("Starting child node service.")
        svc = RequestSocket(hostname="127.0.0.1", port=5001)
        svc.open(node.master_addr, node.master_port)

        sleep(5)

        _logger.info("Registering node")
        svc.send(node.get_register_message())
        _logger.info("Waiting for response")
        message = svc.receive()
        _logger.info(f"Child received message: {message}")

        sleep(1200)
    else:
        raise NotImplementedError(f"Server type not recognized. This should not have happened!")
