#!/usr/bin/env python3

# from src.server import Server
from src.messaging import Publisher, Subscriber
from src.traits import Traits

import logging
from time import sleep

logging.basicConfig(format="%(levelname)s:%(message)s", level=logging.INFO)
_logger = logging.getLogger(__name__)

if __name__ == "__main__":
    t = Traits()

    if t.is_head():
        # This is a head node
        _logger.info("Starting Publisher service.")
        svc = Publisher(hostname=t.master_addr, port=5000)
        svc.open()

        _logger.info("Publishing initial message.")
        svc.publish_object("ALL", {"message": "I am your master."})

        while True:
            sleep(20)
            _logger.info("Head active")
    elif t.is_compute():
        sleep(5)
        # This is a compute node
        _logger.info("Starting Subscriber service.")
        svc = Subscriber(hostname=t.master_addr, port=5000)
        svc.open()
        _logger.info("Subscribing to ALL")
        svc.subscribe("ALL")

        _logger.info("Waiting for message")
        while True:
            topic, obj = svc.receive_object()
            _logger.info(f"[Received!] [Topic: {topic}] {obj}")
    else:
        raise NotImplementedError(f"Server type not recognized. This should not have happened!")

